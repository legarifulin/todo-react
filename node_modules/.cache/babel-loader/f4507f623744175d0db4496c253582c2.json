{"ast":null,"code":"import _objectSpread from\"C:/React/todo-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/React/todo-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/React/todo-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import ToDo from'./components/ToDo';import'./css/main.css';import ToDoForm from'./components/ToDoForm';import logo from'./images/background.png';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var addTask=function addTask(userInput){if(userInput){var newItem={id:Math.random().toString(36).substr(2,9),task:userInput,complete:false};setTodos([].concat(_toConsumableArray(todos),[newItem]));}};var removeTask=function removeTask(id){setTodos(_toConsumableArray(todos.filter(function(todo){return todo.id!==id;})));};var handleToggle=function handleToggle(id){setTodos(_toConsumableArray(todos.map(function(todo){return todo.id===id?_objectSpread(_objectSpread({},todo),{},{complete:!todo.complete}):_objectSpread({},todo);})));};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsxs(\"h1\",{children:[\"Todo List: \",todos.length,\" \"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"background-img\",children:/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"backgpng\"})}),/*#__PURE__*/_jsx(ToDoForm,{addTask:addTask}),todos.map(function(todo){return/*#__PURE__*/_jsx(ToDo,{todo:todo,toggleTask:handleToggle,removeTask:removeTask},todos.id);})]});}export default App;","map":{"version":3,"sources":["C:/React/todo-react/src/App.js"],"names":["useState","ToDo","ToDoForm","logo","App","todos","setTodos","addTask","userInput","newItem","id","Math","random","toString","substr","task","complete","removeTask","filter","todo","handleToggle","map","length"],"mappings":"yTAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,yBAAjB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACf,cAAyBJ,QAAQ,CAAC,EAAD,CAAjC,wCAAOK,KAAP,eAAaC,QAAb,eAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAe,CAC7B,GAAGA,SAAH,CAAc,CACZ,GAAMC,CAAAA,OAAO,CAAG,CACdC,EAAE,CAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,CAAoC,CAApC,CADU,CAEdC,IAAI,CAAEP,SAFQ,CAGdQ,QAAQ,CAAE,KAHI,CAAhB,CAKAV,QAAQ,8BAAKD,KAAL,GAAYI,OAAZ,GAAR,CACD,CACF,CATD,CAWA,GAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACP,EAAD,CAAQ,CACzBJ,QAAQ,oBAAKD,KAAK,CAACa,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACT,EAAL,GAAYA,EAAtB,EAAb,CAAL,EAAR,CACD,CAFD,CAIA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACV,EAAD,CAAQ,CAC3BJ,QAAQ,oBACHD,KAAK,CAACgB,GAAN,CAAU,SAACF,IAAD,QACbA,CAAAA,IAAI,CAACT,EAAL,GAAYA,EAAZ,gCAAqBS,IAArB,MAA2BH,QAAQ,CAAE,CAACG,IAAI,CAACH,QAA3C,oBAA2DG,IAA3D,CADa,EAAV,CADG,EAAR,CAKD,CAND,CAQE,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,qCACE,oCAAgBd,KAAK,CAACiB,MAAtB,OADF,EADF,cAIE,YAAK,SAAS,CAAC,gBAAf,uBACE,YAAK,GAAG,CAAEnB,IAAV,CAAgB,GAAG,CAAC,UAApB,EADF,EAJF,cAOE,KAAC,QAAD,EAAU,OAAO,CAAEI,OAAnB,EAPF,CAQGF,KAAK,CAACgB,GAAN,CAAU,SAACF,IAAD,CAAU,CACnB,mBACE,KAAC,IAAD,EACA,IAAI,CAAIA,IADR,CAGA,UAAU,CAAEC,YAHZ,CAIA,UAAU,CAAIH,UAJd,EAEOZ,KAAK,CAACK,EAFb,CADF,CAOD,CARA,CARH,GADF,CAoBD,CAED,cAAeN,CAAAA,GAAf","sourcesContent":["import { useState } from 'react';\nimport ToDo from './components/ToDo';\nimport './css/main.css';\nimport ToDoForm from './components/ToDoForm';\nimport logo from './images/background.png';\n\nfunction App() {\nconst [todos,setTodos] = useState([]);\n\nconst addTask = (userInput) => {\n  if(userInput) {\n    const newItem = {\n      id: Math.random().toString(36).substr(2,9),\n      task: userInput,\n      complete: false\n    }\n    setTodos([...todos, newItem])\n  }\n}\n\nconst removeTask = (id) => {\n  setTodos([...todos.filter((todo) => todo.id !== id)])\n}\n\nconst handleToggle = (id) => {\n  setTodos ([\n    ...todos.map((todo) =>\n    todo.id === id ? {...todo, complete: !todo.complete} : {...todo}\n    )\n  ])\n}\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List: {todos.length} </h1>\n      </header>\n      <div className='background-img'>\n        <img src={logo} alt=\"backgpng\"/>\n      </div>\n      <ToDoForm addTask={addTask} />\n      {todos.map((todo) => {\n        return (\n          <ToDo \n          todo = {todo}\n          key = {todos.id}\n          toggleTask={handleToggle}\n          removeTask = {removeTask} />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}