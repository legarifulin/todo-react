{"version":3,"sources":["components/ToDo.js","components/ToDoForm.js","images/background.png","App.js","reportWebVitals.js","index.js"],"names":["ToDo","todo","toggleTask","removeTask","className","complete","onClick","id","task","ToDoForm","addTask","useState","userInput","setUserInput","handleSubmit","e","preventDefault","onSubmit","value","type","onChange","currentTarget","onKeyDown","key","placeholder","App","todos","setTodos","filter","handleToggle","map","length","src","logo","alt","newItem","Math","random","toString","substr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAceA,EAdF,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WAC7B,OACI,sBAAqBC,UAAY,YAAjC,UACI,qBAAKA,UAAaH,EAAKI,SAAW,mBAAqB,YACvDC,QAAW,kBAAMJ,EAAWD,EAAKM,KADjC,SAEKN,EAAKO,OAEV,qBAAKJ,UAAY,cAAcE,QAAW,kBAAMH,EAAWF,EAAKM,KAAhE,iBALQN,EAAKM,KCwCVE,G,MAxCE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACf,EAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KAOEC,EAAe,SAACC,GAClBA,EAAEC,iBACFN,EAAQE,GACRC,EAAa,KAUb,OACI,sBAAKT,UAAU,WAAf,UACA,0CACA,uBAAMa,SAAUH,EAAhB,UACI,uBACII,MAASN,EACTO,KAAO,OACPC,SAxBK,SAACL,GAClBF,EAAaE,EAAEM,cAAcH,QAwBjBI,UAfO,SAACP,GACP,UAAVA,EAAEQ,KACDT,EAAaC,IAcLS,YAAc,kBAElB,qBAAKpB,UAAU,MAAf,SACA,oDCnCG,MAA0B,uCCsD1BqB,MAhDf,WACA,MAAyBd,mBAAS,IAAlC,mBAAOe,EAAP,KAAaC,EAAb,KAaMxB,EAAa,SAACI,GAClBoB,EAAS,YAAID,EAAME,QAAO,SAAC3B,GAAD,OAAUA,EAAKM,KAAOA,QAG5CsB,EAAe,SAACtB,GACpBoB,EAAQ,YACHD,EAAMI,KAAI,SAAC7B,GAAD,OACbA,EAAKM,KAAOA,EAAZ,2BAAqBN,GAArB,IAA2BI,UAAWJ,EAAKI,WAA3C,eAA2DJ,SAK7D,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,6CAAgBsB,EAAMK,OAAtB,SAEF,qBAAK3B,UAAU,iBAAf,SACE,qBAAK4B,IAAKC,EAAMC,IAAI,eAEtB,cAAC,EAAD,CAAUxB,QA/BA,SAACE,GACf,GAAGA,EAAW,CACZ,IAAMuB,EAAU,CACd5B,GAAI6B,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAE,GACxC/B,KAAMI,EACNP,UAAU,GAEZsB,EAAS,GAAD,mBAAKD,GAAL,CAAYS,SAyBjBT,EAAMI,KAAI,SAAC7B,GACV,OACE,cAAC,EAAD,CACAA,KAAQA,EAERC,WAAY2B,EACZ1B,WAAcA,GAFPuB,EAAMnB,WCjCRiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29fcf49b.chunk.js","sourcesContent":["const ToDo = ({todo, toggleTask, removeTask}) => {\n    return (\n        <div key = {todo.id} className = 'item-todo'>\n            <div className = {todo.complete ? 'item-text strike' : 'item-text'}\n            onClick = {() => toggleTask(todo.id)}>\n                {todo.task}\n            </div>\n            <div className = 'item-delete' onClick = {() => removeTask(todo.id)}>\n                x\n            </div>\n        </div>\n    )\n}\n\nexport default ToDo;","import {useState} from 'react';\n\nconst ToDoForm = ({addTask}) => {\n    const [userInput,setUserInput] = useState('')\n\n\nconst handleChange = (e) => {\n    setUserInput(e.currentTarget.value)\n\n}    \nconst handleSubmit = (e) => {\n    e.preventDefault();\n    addTask(userInput);\n    setUserInput('')\n}\n\nconst handleKeyPress = (e) => {\n    if(e.key === 'Enter') {\n        handleSubmit(e)\n    }\n}\n\n\n    return (\n        <div className='new-todo'>\n        <h2>New Todo</h2>\n        <form onSubmit={handleSubmit}>\n            <input\n                value = {userInput}\n                type = 'text'\n                onChange = {handleChange}\n                onKeyDown = {handleKeyPress}\n                placeholder = 'Need to do...'\n            />\n            <div className='btn'>\n            <button>Save</button>\n            </div>\n        </form>\n        </div>\n    )\n}\n\nexport default ToDoForm;","export default __webpack_public_path__ + \"static/media/background.79638e9a.png\";","import { useState } from 'react';\nimport ToDo from './components/ToDo';\nimport './css/main.css';\nimport ToDoForm from './components/ToDoForm';\nimport logo from './images/background.png';\n\nfunction App() {\nconst [todos,setTodos] = useState([]);\n\nconst addTask = (userInput) => {\n  if(userInput) {\n    const newItem = {\n      id: Math.random().toString(36).substr(2,9),\n      task: userInput,\n      complete: false\n    }\n    setTodos([...todos, newItem])\n  }\n}\n\nconst removeTask = (id) => {\n  setTodos([...todos.filter((todo) => todo.id !== id)])\n}\n\nconst handleToggle = (id) => {\n  setTodos ([\n    ...todos.map((todo) =>\n    todo.id === id ? {...todo, complete: !todo.complete} : {...todo}\n    )\n  ])\n}\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List: {todos.length} </h1>\n      </header>\n      <div className='background-img'>\n        <img src={logo} alt=\"backgpng\"/>\n      </div>\n      <ToDoForm addTask={addTask} />\n      {todos.map((todo) => {\n        return (\n          <ToDo \n          todo = {todo}\n          key = {todos.id}\n          toggleTask={handleToggle}\n          removeTask = {removeTask} />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}